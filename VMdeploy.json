{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hypervHostDnsName": {
      "type": "string",
      "defaultValue": "hypervhostupdateme",
      "minLength": 1
    },
    "HyperVHostAdminUserName": {
      "type": "string",
      "defaultValue": "rootadmin",
      "minLength": 1
    },
    "HyperVHostAdminPassword": {
      "type": "string",
      "defaultValue": "demo@pass123",
      "minLength": 1
    }
  },
  "variables": {
    "OnPremVNETPrefix": "10.0.0.0/16",
    "OnPremVNETSubnet1Name": "VMHOST",
    "OnPremVNETSubnet1Prefix": "10.0.0.0/24",
    "HyperVHostName": "HYPERVHOST",
    "HyperVHostImagePublisher": "MicrosoftWindowsServer",
    "HyperVHostImageOffer": "WindowsServer",
    "HyperVHostWindowsOSVersion": "2022-Datacenter",
    "HyperVHostOSDiskName": "[concat(variables('HyperVHostName'), '-OSDISK')]",
    "HyperVHostVmSize": "Standard_D8s_v3",
    "HyperVHost-NSG": "[concat(variables('HyperVHostName'), '-NSG')]",
    "HyperVHostVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'OnPremVNET')]",
    "HyperVHostSubnetRef": "[concat(variables('HyperVHostVnetID'), '/subnets/', variables('OnPremVNETSubnet1Name'))]",
    "HyperVHostNicName": "[concat(variables('HyperVHostName'), '-NIC')]",
    "HyperVHost-PUBIPName": "[concat(variables('HyperVHostName'), '-PIP')]",
    "HyperVHostConfigArchiveFolder": ".",
    "HyperVHostConfigArchiveFileName": "HyperVHostConfig.zip",
    "HyperVHostConfigURL": "https://github.com/weeyin83/Lab-Deployment-in-Azure/blob/main/HyperVHostConfig.zip?raw=true",
    "HyperVHostInstallHyperVScriptFolder": ".",
    "HyperVHostInstallHyperVScriptFileName": "InstallHyperV.ps1",
    "HyperVHostInstallHyperVURL": "https://raw.githubusercontent.com/weeyin83/Lab-Deployment-in-Azure/main/InstallHyperV.ps1"
  },
  "resources": [
    {
      "apiVersion": "2022-07-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('HyperVHost-NSG')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Purpose": "LabDeployment"
      },
      "properties": {
        "securityRules": [
          {
            "name": "RDP_Access",
            "properties":
            {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "[variables('OnPremVNETSubnet1Prefix')]",
              "access": "Allow",
              "priority": "100",
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "OnPremVNET",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups',variables('HyperVHost-NSG'))]"
      ],
      "tags": {
        "Purpose": "LabDeployment"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('OnPremVNETPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('OnPremVNETSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('OnPremVNETSubnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('HyperVHost-NSG'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('HyperVHost-PUBIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-07-01",
      "dependsOn": [],
      "tags": {
        "Purpose": "LabDeployment"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('hypervHostDnsName')]"
        }
      }
    },
    {
      "name": "[variables('HyperVHostNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'OnPremVNET')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('HyperVHost-PUBIPName'))]"
      ],
      "tags": {
        "Purpose": "LabDeployment"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('HyperVHostSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('HyperVHost-PUBIPName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('HyperVHost-NSG'))]"
        }
      }
    },
    {
      "name": "[variables('HyperVHostName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('HyperVHostNicName'))]"
      ],
      "tags": {
        "Purpose": "LabDeployment"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('HyperVHostVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('HyperVHostName')]",
          "adminUsername": "[parameters('HyperVHostAdminUsername')]",
          "adminPassword": "[parameters('HyperVHostAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('HyperVHostImagePublisher')]",
            "offer": "[variables('HyperVHostImageOffer')]",
            "sku": "[variables('HyperVHostWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "diskSizeGB": 500
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('HyperVHostNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "InstallHyperV",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2022-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('HyperVHostName'))]"
          ],
          "tags": {
            "displayName": "Install Hyper-V"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('HyperVHostInstallHyperVURL')]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('HyperVHostInstallHyperVScriptFolder'), '/', variables('HyperVHostInstallHyperVScriptFileName'))]"
            }
          }
        },
        {
          "name": "HyperVHostConfig",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2022-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('HyperVHostName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('HyperVHostName'), 'InstallHyperV')]"
          ],
          "tags": {
            "displayName": "HyperVHostConfig"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(variables('HyperVHostConfigURL'))]",
                "script": "HyperVHostConfig.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[variables('HyperVHostName')]"
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {}
}
